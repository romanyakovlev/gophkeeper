// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.27.3
// source: keeper.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	KeeperService_GetText_FullMethodName         = "/keeper.KeeperService/GetText"
	KeeperService_SaveText_FullMethodName        = "/keeper.KeeperService/SaveText"
	KeeperService_GetBytes_FullMethodName        = "/keeper.KeeperService/GetBytes"
	KeeperService_SaveBytes_FullMethodName       = "/keeper.KeeperService/SaveBytes"
	KeeperService_GetCredentials_FullMethodName  = "/keeper.KeeperService/GetCredentials"
	KeeperService_SaveCredentials_FullMethodName = "/keeper.KeeperService/SaveCredentials"
	KeeperService_GetElements_FullMethodName     = "/keeper.KeeperService/GetElements"
)

// KeeperServiceClient is the client API for KeeperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KeeperServiceClient interface {
	GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error)
	SaveText(ctx context.Context, in *SaveTextRequest, opts ...grpc.CallOption) (*SaveTextResponse, error)
	GetBytes(ctx context.Context, in *GetBytesRequest, opts ...grpc.CallOption) (KeeperService_GetBytesClient, error)
	SaveBytes(ctx context.Context, opts ...grpc.CallOption) (KeeperService_SaveBytesClient, error)
	GetCredentials(ctx context.Context, in *GetCredentialsRequest, opts ...grpc.CallOption) (*GetCredentialsResponse, error)
	SaveCredentials(ctx context.Context, in *SaveCredentialsRequest, opts ...grpc.CallOption) (*SaveCredentialsResponse, error)
	GetElements(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Elements, error)
}

type keeperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKeeperServiceClient(cc grpc.ClientConnInterface) KeeperServiceClient {
	return &keeperServiceClient{cc}
}

func (c *keeperServiceClient) GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error) {
	out := new(GetTextResponse)
	err := c.cc.Invoke(ctx, KeeperService_GetText_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperServiceClient) SaveText(ctx context.Context, in *SaveTextRequest, opts ...grpc.CallOption) (*SaveTextResponse, error) {
	out := new(SaveTextResponse)
	err := c.cc.Invoke(ctx, KeeperService_SaveText_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperServiceClient) GetBytes(ctx context.Context, in *GetBytesRequest, opts ...grpc.CallOption) (KeeperService_GetBytesClient, error) {
	stream, err := c.cc.NewStream(ctx, &KeeperService_ServiceDesc.Streams[0], KeeperService_GetBytes_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &keeperServiceGetBytesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KeeperService_GetBytesClient interface {
	Recv() (*GetBytesResponse, error)
	grpc.ClientStream
}

type keeperServiceGetBytesClient struct {
	grpc.ClientStream
}

func (x *keeperServiceGetBytesClient) Recv() (*GetBytesResponse, error) {
	m := new(GetBytesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keeperServiceClient) SaveBytes(ctx context.Context, opts ...grpc.CallOption) (KeeperService_SaveBytesClient, error) {
	stream, err := c.cc.NewStream(ctx, &KeeperService_ServiceDesc.Streams[1], KeeperService_SaveBytes_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &keeperServiceSaveBytesClient{stream}
	return x, nil
}

type KeeperService_SaveBytesClient interface {
	Send(*SaveBytesRequest) error
	CloseAndRecv() (*SaveBytesResponse, error)
	grpc.ClientStream
}

type keeperServiceSaveBytesClient struct {
	grpc.ClientStream
}

func (x *keeperServiceSaveBytesClient) Send(m *SaveBytesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *keeperServiceSaveBytesClient) CloseAndRecv() (*SaveBytesResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SaveBytesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keeperServiceClient) GetCredentials(ctx context.Context, in *GetCredentialsRequest, opts ...grpc.CallOption) (*GetCredentialsResponse, error) {
	out := new(GetCredentialsResponse)
	err := c.cc.Invoke(ctx, KeeperService_GetCredentials_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperServiceClient) SaveCredentials(ctx context.Context, in *SaveCredentialsRequest, opts ...grpc.CallOption) (*SaveCredentialsResponse, error) {
	out := new(SaveCredentialsResponse)
	err := c.cc.Invoke(ctx, KeeperService_SaveCredentials_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperServiceClient) GetElements(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Elements, error) {
	out := new(Elements)
	err := c.cc.Invoke(ctx, KeeperService_GetElements_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeeperServiceServer is the server API for KeeperService service.
// All implementations must embed UnimplementedKeeperServiceServer
// for forward compatibility
type KeeperServiceServer interface {
	GetText(context.Context, *GetTextRequest) (*GetTextResponse, error)
	SaveText(context.Context, *SaveTextRequest) (*SaveTextResponse, error)
	GetBytes(*GetBytesRequest, KeeperService_GetBytesServer) error
	SaveBytes(KeeperService_SaveBytesServer) error
	GetCredentials(context.Context, *GetCredentialsRequest) (*GetCredentialsResponse, error)
	SaveCredentials(context.Context, *SaveCredentialsRequest) (*SaveCredentialsResponse, error)
	GetElements(context.Context, *emptypb.Empty) (*Elements, error)
	mustEmbedUnimplementedKeeperServiceServer()
}

// UnimplementedKeeperServiceServer must be embedded to have forward compatible implementations.
type UnimplementedKeeperServiceServer struct {
}

func (UnimplementedKeeperServiceServer) GetText(context.Context, *GetTextRequest) (*GetTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetText not implemented")
}
func (UnimplementedKeeperServiceServer) SaveText(context.Context, *SaveTextRequest) (*SaveTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveText not implemented")
}
func (UnimplementedKeeperServiceServer) GetBytes(*GetBytesRequest, KeeperService_GetBytesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBytes not implemented")
}
func (UnimplementedKeeperServiceServer) SaveBytes(KeeperService_SaveBytesServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveBytes not implemented")
}
func (UnimplementedKeeperServiceServer) GetCredentials(context.Context, *GetCredentialsRequest) (*GetCredentialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCredentials not implemented")
}
func (UnimplementedKeeperServiceServer) SaveCredentials(context.Context, *SaveCredentialsRequest) (*SaveCredentialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCredentials not implemented")
}
func (UnimplementedKeeperServiceServer) GetElements(context.Context, *emptypb.Empty) (*Elements, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetElements not implemented")
}
func (UnimplementedKeeperServiceServer) mustEmbedUnimplementedKeeperServiceServer() {}

// UnsafeKeeperServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KeeperServiceServer will
// result in compilation errors.
type UnsafeKeeperServiceServer interface {
	mustEmbedUnimplementedKeeperServiceServer()
}

func RegisterKeeperServiceServer(s grpc.ServiceRegistrar, srv KeeperServiceServer) {
	s.RegisterService(&KeeperService_ServiceDesc, srv)
}

func _KeeperService_GetText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServiceServer).GetText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KeeperService_GetText_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServiceServer).GetText(ctx, req.(*GetTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeeperService_SaveText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServiceServer).SaveText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KeeperService_SaveText_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServiceServer).SaveText(ctx, req.(*SaveTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeeperService_GetBytes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBytesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeeperServiceServer).GetBytes(m, &keeperServiceGetBytesServer{stream})
}

type KeeperService_GetBytesServer interface {
	Send(*GetBytesResponse) error
	grpc.ServerStream
}

type keeperServiceGetBytesServer struct {
	grpc.ServerStream
}

func (x *keeperServiceGetBytesServer) Send(m *GetBytesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _KeeperService_SaveBytes_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KeeperServiceServer).SaveBytes(&keeperServiceSaveBytesServer{stream})
}

type KeeperService_SaveBytesServer interface {
	SendAndClose(*SaveBytesResponse) error
	Recv() (*SaveBytesRequest, error)
	grpc.ServerStream
}

type keeperServiceSaveBytesServer struct {
	grpc.ServerStream
}

func (x *keeperServiceSaveBytesServer) SendAndClose(m *SaveBytesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *keeperServiceSaveBytesServer) Recv() (*SaveBytesRequest, error) {
	m := new(SaveBytesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _KeeperService_GetCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServiceServer).GetCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KeeperService_GetCredentials_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServiceServer).GetCredentials(ctx, req.(*GetCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeeperService_SaveCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServiceServer).SaveCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KeeperService_SaveCredentials_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServiceServer).SaveCredentials(ctx, req.(*SaveCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeeperService_GetElements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServiceServer).GetElements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KeeperService_GetElements_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServiceServer).GetElements(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// KeeperService_ServiceDesc is the grpc.ServiceDesc for KeeperService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var KeeperService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "keeper.KeeperService",
	HandlerType: (*KeeperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetText",
			Handler:    _KeeperService_GetText_Handler,
		},
		{
			MethodName: "SaveText",
			Handler:    _KeeperService_SaveText_Handler,
		},
		{
			MethodName: "GetCredentials",
			Handler:    _KeeperService_GetCredentials_Handler,
		},
		{
			MethodName: "SaveCredentials",
			Handler:    _KeeperService_SaveCredentials_Handler,
		},
		{
			MethodName: "GetElements",
			Handler:    _KeeperService_GetElements_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetBytes",
			Handler:       _KeeperService_GetBytes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SaveBytes",
			Handler:       _KeeperService_SaveBytes_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "keeper.proto",
}
